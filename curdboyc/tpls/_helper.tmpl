{{/* 
curdNodeGenerateFields
curdNodeGenerateFieldType

curdNodeGenerateEdges
curdNodeGenerateEdgeType
*/}}

{{define "curdNodeGenerateFields"}}
{{- $node:=. -}}
{{- range $node.AllFldsIncludePK -}}
{{- $field := . -}}
// {{$field.Comment}}
{{$field.StructField}} {{template "curdNodeGenerateFieldType" $field}} `{{$field.StructTag}}`
{{ end }}
{{- end -}}

{{define "curdNodeGenerateFieldType"}}
{{- $field:=. -}}
{{- $fieldTypeStr :=$field.Type.String -}}
{{- if eq $fieldTypeStr "string" -}}
    string
{{- else if eq $fieldTypeStr "int" -}}
    int
{{- else if eq $fieldTypeStr "time.Time" -}}
    Time
{{- else if eq $fieldTypeStr "float64" -}}
    float64
{{- else if eq $fieldTypeStr "bool" -}}
    bool
{{- else -}}
    {{error "undefined field type %s" $fieldTypeStr }}
{{- end -}} 
{{end}}

{{define "curdNodeGenerateEdges"}}
{{- $targetNode:=.TargetNode -}}
{{- $allNodes:=.AllNodes -}}
{{- range $targetNode.Edges -}}{{/* range edges start*/}}
{{- $edge:=. -}}
// {{$edge.Comment}}
{{ capitalFirstLetter $edge.Name }} {{template "curdNodeGenerateEdgeType" (buildMap ".targetNode" $targetNode "edge" $edge)}} `{{$edge.StructTag}}`

{{ end -}}{{/*range edges end*/}}
{{end}}

{{define "curdNodeGenerateEdgeType"}}
{{- $targetNode:=.targetNode -}}
{{- $edge := .edge}}
{{- $edgeRelTypeStr := $edge.Rel.Type.String -}}
{{- if eq $edgeRelTypeStr "O2M" -}}
[]*{{$edge.Type.Name}}
{{- else if eq $edgeRelTypeStr "M2O" -}}
*{{$edge.Type.Name}}
{{- else -}}
{{error "undefined edge relation type %" $edgeRelTypeStr }}
{{- end -}}
{{end}}

{{define "imports"}}
{{- $node:=. -}}
{{$map := buildMap}}
{{- range $node.AllFldsIncludePK -}}
{{- $field := . -}}
{{- $fieldTypeStr :=$field.Type.String -}}
{{- if eq $fieldTypeStr "time.Time" -}}
    {{if index $map "time.Time" }}

    {{else}}
        "time"
        sdktime "github.com/pigfall/gosdk/time"
        {{ $map = setMap $map "time.Time" true}}
    {{ end }}
{{- end -}}
{{end}}
{{end}}

